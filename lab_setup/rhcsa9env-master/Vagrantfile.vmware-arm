VAGRANTFILE_API_VERSION = "2"
VAGRANT_DISABLE_VBOXSYMLINKCREATE = "1"
file_to_disk1 = './disk-0-1.vdi'
file_to_disk2 = './disk-0-2.vdi'
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
# Use same SSH key for each machine
config.ssh.insert_key = false
config.vm.box_check_update = false


  # Repo Configuration
  config.vm.define "repo" do |repo|
    repo.vm.box = "dc/rhel9-arm"
    repo.vm.provision :shell, :inline => "sudo rm -rf /EMPTY", run: "always"
    repo.vm.provision :shell, :inline => "sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config; sudo systemctl restart sshd;", run: "always"
    repo.vm.provision :shell, :inline => "yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm -y; sudo yum install -y  python3-pip python3-devel httpd sshpass vsftpd", run: "always"
    repo.vm.provision :shell, :inline => " python3 -m pip install -U pip ; python3 -m pip install pexpect; python3 -m pip install ansible", run: "always"
    repo.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__exclude: [".git/", "disk-0-1.vdi", "disk-0-2.vdi", ".github"]
    # repo.vm.network "private_network", ip: "192.168.55.149"

    repo.vm.provision "shell", inline: <<-SHELL
# Custom hostname update script
echo "repo.example.com" > /etc/hostname
hostnamectl set-hostname repo.example.com
SHELL

    # Disable Vagrant's default network configuration
    # repo.vm.network "private_network", type: "dhcp", auto_config: false
        # Use a shell script to configure the static IP
        repo.vm.provision "shell", inline: <<-SHELL
# Set up static IP address
cat <<EOF | sudo tee /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
BOOTPROTO=static
ONBOOT=yes
IPADDR=192.168.55.149
NETMASK=255.255.255.0
GATEWAY=192.168.55.1
DNS1=8.8.8.8
EOF

# Restart the network service
sudo systemctl restart network || sudo service network restart
SHELL

    repo.vm.provider "vmware_desktop" do |repo|
       repo.memory = "1024"
    end




  end

  # Server 1 Configuration
  config.vm.define "server1" do |server1|
    server1.vm.box = "dc/rhel9-arm"
    server1.vm.synced_folder ".", "/vagrant", type: "rsync", rsync__exclude: [".git/", "disk-0-1.vdi", "disk-0-2.vdi", ".github"]
    # server1.vm.network "private_network", ip: "192.168.55.150"

    # Disable Vagrant's default network configuration
    # server1.vm.network "private_network", type: "dhcp", auto_config: false
    # server1 a shell script to configure the static IP
    server1.vm.provision "shell", inline: <<-SHELL
# Set up static IP address
cat <<EOF | sudo tee /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
BOOTPROTO=static
ONBOOT=yes
IPADDR=192.168.55.149
NETMASK=255.255.255.0
GATEWAY=192.168.55.1
DNS1=8.8.8.8
EOF

    server1.vm.provider "vmware_desktop" do |vmware|
      vmware.vmx["memsize"] = "1024"
      vmware.vmx["numvcpus"] = "1"
    end

    server1.vm.provision "shell", inline: <<-SHELL
# Custom hostname update script
echo "repo.example.com" > /etc/hostname
hostnamectl set-hostname server1.eight.example.com
SHELL

    server1.vm.provision :ansible_local do |ansible|
      ansible.playbook = "/vagrant/playbooks/master.yml"
      ansible.install = false
      ansible.compatibility_mode = "2.0"
      ansible.inventory_path = "/vagrant/inventory"
      ansible.config_file = "/vagrant/ansible.cfg"
      ansible.limit = "all"
    end
    server1.vm.provision :shell, :inline => "reboot", run: "always"
  end
end
